# .prettierrc in YAML format

# Include parentheses around a sole arrow function parameter.
arrowParens: always

# Put > of opening tags on the last line instead of on a new line.
bracketSameLine: false

# Print spaces between brackets.
bracketSpacing: true

# Print (to stderr) where a cursor at the given position would move to after formatting.
# This option cannot be used with --range-start and --range-end.
# cursorOffset: -1

# Whether parse the .editorconfig file in your project and convert its properties to the
# corresponding Prettier configuration. This configuration will be overridden by .prettierrc, etc.
editorconfig: false

# Control how Prettier formats quoted code embedded in the file.
embeddedLanguageFormatting: 'auto'

# Which end of line characters to apply.
endOfLine: 'lf'

# Specify the input filepath. This will be used to do parser inference.
# filepath:

# How to handle whitespaces in HTML.
htmlWhitespaceSensitivity: 'css'

# Insert @format pragma into file's first docblock comment.
insertPragma: false

# Use single quotes in JSX.
jsxSingleQuote: false

# Which parser to use.
# parser:

# Custom directory that contains prettier plugins in node_modules subdirectory.
# Overrides default behavior when plugins are searched relatively to the location of Prettier.
# Multiple values are accepted.
# pluginSearchDirs:

# Add a plugin. Multiple plugins can be passed as separate `--plugin`s.
# plugins:

# The line length where Prettier will try wrap.
printWidth: 100

# How to wrap prose.
proseWrap: 'preserve'

# Change when properties in objects are quoted.
quoteProps: 'as-needed'

# Format code ending at a given character offset (exclusive).
# The range will extend forwards to the end of the selected statement.
# This option cannot be used with --cursor-offset.
# rangeEnd: null

# Format code starting at a given character offset.
# The range will extend backwards to the start of the first line containing the selected statement.
# This option cannot be used with --cursor-offset.
# rangeStart: 0

# Require either '@prettier' or '@format' to be present in the file's first docblock comment
# in order for it to be formatted.
requirePragma: false

# Print semicolons.
semi: true

# Enforce single attribute per line in HTML, Vue and JSX.
singleAttributePerLine: false

# Use single quotes instead of double quotes.
singleQuote: true

# Number of spaces per indentation level.
tabWidth: 2

# Print trailing commas wherever possible when multi-line.
trailingComma: 'es5'

# Indent with tabs instead of spaces.
useTabs: false

# Indent script and style tags in Vue files.
vueIndentScriptAndStyle: false
